/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ithemba.ray_of_hope;

import javax.swing.*;

/**
 *
 * @author Sanele
 */
public class frmSelector extends javax.swing.JDialog {

    /**
     * Creates new form frmSelector
     * @param frmParent
     * @param strMember
     */
    public frmSelector(JFrame frmParent, String strMember) {
        super(frmParent, "Select Member", ModalityType.APPLICATION_MODAL);
        initComponents();
        this.setResizable(false);
        this.pack();
        this.setLocationRelativeTo(null);
        this.strMember = strMember;
        switch(strMember) {
            case "Principal": case "Delete Principal":
                dataMethods.mLoadToComboBox("SELECT FName, LName FROM Principal_Members", cboSelection);
                break;
                
            case "Beneficiary": case "Delete Beneficiary":
                if(databaseInterface.mGetField("SELECT Role FROM Users_Login WHERE ID ="+frmLogin.mGetLoggedInUser()).equals("User/Client")) {
                    dataMethods.mLoadToComboBox("SELECT FName, LName FROM Beneficiaries WHERE PM_ID_NUM ="+
                            databaseInterface.mGetIdentityNumber("SELECT ID_Num FROM Principal_Members WHERE Acc_ID ="+frmLogin.mGetLoggedInUser()),
                            cboSelection);
                } else {
                    dataMethods.mLoadToComboBox("SELECT FName, LName FROM Beneficiaries", cboSelection);
                }
                break;
                
            case "Covers":
                dataMethods.mLoadToComboBox("SELECT CoverAmount, Category FROM Covers", cboSelection);
                this.setTitle("Select Policy Cover");
                break;
        }
    }
    
    private final clsDatabaseInterface databaseInterface = new clsDatabaseInterface();
    private final clsDataMethods dataMethods = new clsDataMethods();
    
    private frmBeneficiaries frmBeneficiaries;
    private frmCovers frmCovers;
    private final frmLogin frmLogin = new frmLogin();
    private frmRegisterAndManagePolicies frmManagePolicy;
    
    private String strMember;
    
    public void mBeneficiariesInstance(frmBeneficiaries frmInstance) {
        this.frmBeneficiaries = frmInstance;
    }
    
    public void mCoversInstance(frmCovers frmInstance) {
        this.frmCovers = frmInstance;
    }
    
    public void mRegisterAndManagePoliciesInstance(frmRegisterAndManagePolicies frmInstance) {
        this.frmManagePolicy = frmInstance;
    }
    
    private String[] mSelection() {
        return new String[] {
            cboSelection.getSelectedItem().toString()
                .substring(0, cboSelection.getSelectedItem().toString()
                    .indexOf(" ")).trim(),
            
            cboSelection.getSelectedItem().toString()
                .substring(cboSelection.getSelectedItem().toString().indexOf(" "),
                    cboSelection.getSelectedItem().toString().trim().length()).trim()
        };
    }

    private void mBeneficiaryDetails() {
        frmBeneficiaries.mSetDetailsToGUI(databaseInterface.mGetIdentityNumber("SELECT ID_NUM FROM Beneficiaries WHERE FName ='"+mSelection()[0]+
                    "' AND LName ='"+mSelection()[1]+"'"));
    }
    
    private void mBeneficiaryIDNo() {
       frmBeneficiaries.mSetBeneficiaryIDNo(databaseInterface.mGetIdentityNumber("SELECT ID_NUM FROM Beneficiaries WHERE FName ='"+mSelection()[0]+
                "' AND LName ='"+mSelection()[1]+"'"));
    }
    
    private void mCovers() {
        frmCovers.mSetDetailsToGUI(Integer.parseInt(databaseInterface.mGetField(
                "SELECT ID FROM Covers WHERE CoverAmount ='"+mSelection()[0]+"' AND Category ='"+mSelection()[1]+"'")));
    }
    
    private void mPrincipalIDNo() {
        frmManagePolicy.mSetPrincipalIDNo(databaseInterface.mGetIdentityNumber("SELECT ID_NUM FROM Principal_Members WHERE FName ='"+mSelection()[0]+
                "' AND LName ='"+mSelection()[1]+"'"));
    }
    
    private void mPrincipalMemberDetails() {
        frmManagePolicy.mSetPrincipalMemberDetailsToGUI(databaseInterface.mGetIdentityNumber("SELECT ID_NUM FROM Principal_Members WHERE FName ='"+mSelection()[0]+
                "' AND LName ='"+mSelection()[1]+"'"));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMainPanel = new javax.swing.JPanel();
        jpContainer = new javax.swing.JPanel();
        cboSelection = new javax.swing.JComboBox<>();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpMainPanel.setBackground(new java.awt.Color(204, 0, 0));

        jpContainer.setBackground(new java.awt.Color(255, 255, 255));

        btnOk.setBackground(new java.awt.Color(255, 255, 255));
        btnOk.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpContainerLayout = new javax.swing.GroupLayout(jpContainer);
        jpContainer.setLayout(jpContainerLayout);
        jpContainerLayout.setHorizontalGroup(
            jpContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContainerLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jpContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboSelection, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpContainerLayout.createSequentialGroup()
                        .addGap(0, 160, Short.MAX_VALUE)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jpContainerLayout.setVerticalGroup(
            jpContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(btnOk)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jpMainPanelLayout = new javax.swing.GroupLayout(jpMainPanel);
        jpMainPanel.setLayout(jpMainPanelLayout);
        jpMainPanelLayout.setHorizontalGroup(
            jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpMainPanelLayout.setVerticalGroup(
            jpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMainPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jpContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        switch(strMember) {
            
            case "Beneficiary":
                mBeneficiaryDetails();
                break;
                
            case "Covers":
                mCovers();
                break;
                            
            case "Delete Beneficiary":
                mBeneficiaryIDNo();
                break;
                    
            case "Delete Principal":
                mPrincipalIDNo();
                break;
                
            case "Principal":
                mPrincipalMemberDetails();
                break;
        }
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmSelector dialog = new frmSelector(new javax.swing.JFrame(), "");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox<String> cboSelection;
    private javax.swing.JPanel jpContainer;
    private javax.swing.JPanel jpMainPanel;
    // End of variables declaration//GEN-END:variables
}
